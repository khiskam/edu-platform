// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: schema.Expr("uuid_generate_v4()")},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// CompletedLessonsColumns holds the columns for the "completed_lessons" table.
	CompletedLessonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: schema.Expr("uuid_generate_v4()")},
		{Name: "lesson_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
	}
	// CompletedLessonsTable holds the schema information for the "completed_lessons" table.
	CompletedLessonsTable = &schema.Table{
		Name:       "completed_lessons",
		Columns:    CompletedLessonsColumns,
		PrimaryKey: []*schema.Column{CompletedLessonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "completed_lessons_lessons_completed_lessons",
				Columns:    []*schema.Column{CompletedLessonsColumns[1]},
				RefColumns: []*schema.Column{LessonsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "completed_lessons_users_completed_lessons",
				Columns:    []*schema.Column{CompletedLessonsColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CompletedTasksColumns holds the columns for the "completed_tasks" table.
	CompletedTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: schema.Expr("uuid_generate_v4()")},
		{Name: "answer", Type: field.TypeString},
		{Name: "is_completed", Type: field.TypeBool},
		{Name: "task_id", Type: field.TypeUUID, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
	}
	// CompletedTasksTable holds the schema information for the "completed_tasks" table.
	CompletedTasksTable = &schema.Table{
		Name:       "completed_tasks",
		Columns:    CompletedTasksColumns,
		PrimaryKey: []*schema.Column{CompletedTasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "completed_tasks_tasks_completed_tasks",
				Columns:    []*schema.Column{CompletedTasksColumns[3]},
				RefColumns: []*schema.Column{TasksColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "completed_tasks_users_completed_tasks",
				Columns:    []*schema.Column{CompletedTasksColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// LessonsColumns holds the columns for the "lessons" table.
	LessonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: schema.Expr("uuid_generate_v4()")},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "layout", Type: field.TypeString},
		{Name: "category_id", Type: field.TypeUUID, Nullable: true},
	}
	// LessonsTable holds the schema information for the "lessons" table.
	LessonsTable = &schema.Table{
		Name:       "lessons",
		Columns:    LessonsColumns,
		PrimaryKey: []*schema.Column{LessonsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "lessons_categories_lessons",
				Columns:    []*schema.Column{LessonsColumns[4]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TasksColumns holds the columns for the "tasks" table.
	TasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: schema.Expr("uuid_generate_v4()")},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "answer", Type: field.TypeString},
		{Name: "category_id", Type: field.TypeUUID, Nullable: true},
		{Name: "uploaded_file_id", Type: field.TypeUUID, Nullable: true},
	}
	// TasksTable holds the schema information for the "tasks" table.
	TasksTable = &schema.Table{
		Name:       "tasks",
		Columns:    TasksColumns,
		PrimaryKey: []*schema.Column{TasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tasks_categories_tasks",
				Columns:    []*schema.Column{TasksColumns[4]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "tasks_uploaded_files_tasks",
				Columns:    []*schema.Column{TasksColumns[5]},
				RefColumns: []*schema.Column{UploadedFilesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UploadedFilesColumns holds the columns for the "uploaded_files" table.
	UploadedFilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: schema.Expr("uuid_generate_v4()")},
		{Name: "file_name", Type: field.TypeString},
		{Name: "content_type", Type: field.TypeString},
		{Name: "size", Type: field.TypeInt64},
	}
	// UploadedFilesTable holds the schema information for the "uploaded_files" table.
	UploadedFilesTable = &schema.Table{
		Name:       "uploaded_files",
		Columns:    UploadedFilesColumns,
		PrimaryKey: []*schema.Column{UploadedFilesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: schema.Expr("uuid_generate_v4()")},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"user", "admin"}, Default: "user"},
		{Name: "uid", Type: field.TypeString, Unique: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CategoriesTable,
		CompletedLessonsTable,
		CompletedTasksTable,
		LessonsTable,
		TasksTable,
		UploadedFilesTable,
		UsersTable,
	}
)

func init() {
	CompletedLessonsTable.ForeignKeys[0].RefTable = LessonsTable
	CompletedLessonsTable.ForeignKeys[1].RefTable = UsersTable
	CompletedTasksTable.ForeignKeys[0].RefTable = TasksTable
	CompletedTasksTable.ForeignKeys[1].RefTable = UsersTable
	LessonsTable.ForeignKeys[0].RefTable = CategoriesTable
	TasksTable.ForeignKeys[0].RefTable = CategoriesTable
	TasksTable.ForeignKeys[1].RefTable = UploadedFilesTable
}
